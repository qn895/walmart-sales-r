stores_measures
setwd("C:/Users/jenng/OneDrive/School/Class of 2017 (UT)/CS 329E - Data Visualization/Projects/dv_tproject5_quynh/01 Data")
stores_file_name <- "stores.csv"
stores_df <- read.csv(stores_file_name, stringsAsFactors = FALSE)
names(stores_df)
for(n in names(stores_df)) {
stores_df[n] <- data.frame(lapply(stores_df[n], gsub, pattern="[^ -~]",replacement= ""))
}
str(stores_df)
stores_dimensions <- c("Type", "Stpre")
stores_dimensions
stores_measures <- setdiff(names(stores_df), dimensions)
stores_measures
setwd("C:/Users/jenng/OneDrive/School/Class of 2017 (UT)/CS 329E - Data Visualization/Projects/dv_tproject5_quynh/01 Data")
stores_file_name <- "stores.csv"
stores_df <- read.csv(stores_file_name, stringsAsFactors = FALSE)
names(stores_df)
for(n in names(stores_df)) {
stores_df[n] <- data.frame(lapply(stores_df[n], gsub, pattern="[^ -~]",replacement= ""))
}
str(stores_df)
stores_dimensions <- c("Type", "Store")
stores_dimensions
stores_measures <- setdiff(names(stores_df), stores_dimensions)
stores_measures
setwd("C:/Users/jenng/OneDrive/School/Class of 2017 (UT)/CS 329E - Data Visualization/Projects/dv_tproject5_quynh/01 Data")
stores_file_name <- "stores.csv"
stores_df <- read.csv(stores_file_name, stringsAsFactors = FALSE)
names(stores_df)
for(n in names(stores_df)) {
stores_df[n] <- data.frame(lapply(stores_df[n], gsub, pattern="[^ -~]",replacement= ""))
}
str(stores_df)
stores_dimensions <- c("Type", "Store")
stores_measures <- setdiff(names(stores_df), stores_dimensions)
dimensions <- stores_dimensions
measures <- stores_measures
df <- stores_df
if( length(measures) > 1 || ! is.na(dimensions)) {
for(d in dimensions) {
# Get rid of " and ' in dimensions.
train_df[d] <- data.frame(lapply(df[d], gsub, pattern="[\"']",replacement= ""))
# Change & to and in dimensions.
train_df[d] <- data.frame(lapply(df[d], gsub, pattern="&",replacement= " and "))
# Change : to ; in dimensions.
df[d] <- data.frame(lapply(df[d], gsub, pattern=":",replacement= ";"))
}
}
if( length(measures) > 1 || ! is.na(measures)) {
for(m in measures) {
df[m] <- data.frame(lapply(df[m], gsub, pattern="[^--.0-9]",replacement= ""))
}
}
write.csv(df, paste(gsub(".csv", "", file_name), ".reformatted.csv", sep=""), row.names=FALSE, na = "")
tableName <- gsub(" +", "_", gsub("[^A-z, 0-9, ]", "", gsub(".csv", "", file_name)))
sql <- paste("CREATE TABLE", tableName, "(\n-- Change table_name to the table name you want.\n")
if( length(measures) > 1 || ! is.na(dimensions)) {
for(d in dimensions) {
sql <- paste(sql, paste(d, "varchar2(4000),\n"))
}
}
if( length(measures) > 1 || ! is.na(measures)) {
for(m in measures) {
if(m != tail(measures, n=1)) sql <- paste(sql, paste(m, "number(38,4),\n"))
else sql <- paste(sql, paste(m, "number(38,4)\n"))
}
}
sql <- paste(sql, ");")
cat(sql)
setwd("C:/Users/jenng/OneDrive/School/Class of 2017 (UT)/CS 329E - Data Visualization/Projects/dv_tproject5_quynh/01 Data")
file_name <- "stores.csv"
stores_df <- read.csv(file_name, stringsAsFactors = FALSE)
names(stores_df)
for(n in names(stores_df)) {
stores_df[n] <- data.frame(lapply(stores_df[n], gsub, pattern="[^ -~]",replacement= ""))
}
str(stores_df)
stores_dimensions <- c("Type", "Store")
stores_measures <- setdiff(names(stores_df), stores_dimensions)
dimensions <- stores_dimensions
measures <- stores_measures
df <- stores_df
if( length(measures) > 1 || ! is.na(dimensions)) {
for(d in dimensions) {
# Get rid of " and ' in dimensions.
train_df[d] <- data.frame(lapply(df[d], gsub, pattern="[\"']",replacement= ""))
# Change & to and in dimensions.
train_df[d] <- data.frame(lapply(df[d], gsub, pattern="&",replacement= " and "))
# Change : to ; in dimensions.
df[d] <- data.frame(lapply(df[d], gsub, pattern=":",replacement= ";"))
}
}
if( length(measures) > 1 || ! is.na(measures)) {
for(m in measures) {
df[m] <- data.frame(lapply(df[m], gsub, pattern="[^--.0-9]",replacement= ""))
}
}
write.csv(df, paste(gsub(".csv", "", file_name), ".reformatted.csv", sep=""), row.names=FALSE, na = "")
tableName <- gsub(" +", "_", gsub("[^A-z, 0-9, ]", "", gsub(".csv", "", file_name)))
sql <- paste("CREATE TABLE", tableName, "(\n-- Change table_name to the table name you want.\n")
if( length(measures) > 1 || ! is.na(dimensions)) {
for(d in dimensions) {
sql <- paste(sql, paste(d, "varchar2(4000),\n"))
}
}
if( length(measures) > 1 || ! is.na(measures)) {
for(m in measures) {
if(m != tail(measures, n=1)) sql <- paste(sql, paste(m, "number(38,4),\n"))
else sql <- paste(sql, paste(m, "number(38,4)\n"))
}
}
sql <- paste(sql, ");")
cat(sql)
#setwd("C:/Users/jenng/OneDrive/School/Class of 2017 (UT)/CS 329E - Data Visualization/Projects/dv_tproject5_quynh/01 Data")
file_name <- "features.csv"
features_df <- read.csv(file_name, stringsAsFactors = FALSE)
names(features_df)
features_dimensions <- c("Store", "Date","IsHoliday")
features_measures <- setdiff(names(features_df), features_dimensions)
dimensions <- features_dimensions
measures <- features_measures
measures
if( length(measures) > 1 || ! is.na(dimensions)) {
for(d in dimensions) {
# Get rid of " and ' in dimensions.
train_df[d] <- data.frame(lapply(df[d], gsub, pattern="[\"']",replacement= ""))
# Change & to and in dimensions.
train_df[d] <- data.frame(lapply(df[d], gsub, pattern="&",replacement= " and "))
# Change : to ; in dimensions.
df[d] <- data.frame(lapply(df[d], gsub, pattern=":",replacement= ";"))
}
}
if( length(measures) > 1 || ! is.na(measures)) {
for(m in measures) {
df[m] <- data.frame(lapply(df[m], gsub, pattern="[^--.0-9]",replacement= ""))
}
}
write.csv(df, paste(gsub(".csv", "", file_name), ".reformatted.csv", sep=""), row.names=FALSE, na = "")
tableName <- gsub(" +", "_", gsub("[^A-z, 0-9, ]", "", gsub(".csv", "", file_name)))
sql <- paste("CREATE TABLE", tableName, "(\n-- Change table_name to the table name you want.\n")
if( length(measures) > 1 || ! is.na(dimensions)) {
for(d in dimensions) {
sql <- paste(sql, paste(d, "varchar2(4000),\n"))
}
}
if( length(measures) > 1 || ! is.na(measures)) {
for(m in measures) {
if(m != tail(measures, n=1)) sql <- paste(sql, paste(m, "number(38,4),\n"))
else sql <- paste(sql, paste(m, "number(38,4)\n"))
}
}
sql <- paste(sql, ");")
cat(sql)
df <- stores_df
if( length(measures) > 1 || ! is.na(dimensions)) {
for(d in dimensions) {
# Get rid of " and ' in dimensions.
train_df[d] <- data.frame(lapply(df[d], gsub, pattern="[\"']",replacement= ""))
# Change & to and in dimensions.
train_df[d] <- data.frame(lapply(df[d], gsub, pattern="&",replacement= " and "))
# Change : to ; in dimensions.
df[d] <- data.frame(lapply(df[d], gsub, pattern=":",replacement= ";"))
}
}
if( length(measures) > 1 || ! is.na(measures)) {
for(m in measures) {
df[m] <- data.frame(lapply(df[m], gsub, pattern="[^--.0-9]",replacement= ""))
}
}
write.csv(df, paste(gsub(".csv", "", file_name), ".reformatted.csv", sep=""), row.names=FALSE, na = "")
tableName <- gsub(" +", "_", gsub("[^A-z, 0-9, ]", "", gsub(".csv", "", file_name)))
sql <- paste("CREATE TABLE", tableName, "(\n-- Change table_name to the table name you want.\n")
if( length(measures) > 1 || ! is.na(dimensions)) {
for(d in dimensions) {
sql <- paste(sql, paste(d, "varchar2(4000),\n"))
}
}
if( length(measures) > 1 || ! is.na(measures)) {
for(m in measures) {
if(m != tail(measures, n=1)) sql <- paste(sql, paste(m, "number(38,4),\n"))
else sql <- paste(sql, paste(m, "number(38,4)\n"))
}
}
sql <- paste(sql, ");")
cat(sql)
#setwd("C:/Users/jenng/OneDrive/School/Class of 2017 (UT)/CS 329E - Data Visualization/Projects/dv_tproject5_quynh/01 Data")
file_name <- "features.csv"
features_df <- read.csv(file_name, stringsAsFactors = FALSE)
names(features_df)
for(n in names(features_df)) {
features_df[n] <- data.frame(lapply(features_df[n], gsub, pattern="[^ -~]",replacement= ""))
}
str(features_df)
features_dimensions <- c("Store", "Date","IsHoliday")
features_measures <- setdiff(names(features_df), features_dimensions)
dimensions <- features_dimensions
measures <- features_measures
measures
df <- stores_df
if( length(measures) > 1 || ! is.na(dimensions)) {
for(d in dimensions) {
# Get rid of " and ' in dimensions.
train_df[d] <- data.frame(lapply(df[d], gsub, pattern="[\"']",replacement= ""))
# Change & to and in dimensions.
train_df[d] <- data.frame(lapply(df[d], gsub, pattern="&",replacement= " and "))
# Change : to ; in dimensions.
df[d] <- data.frame(lapply(df[d], gsub, pattern=":",replacement= ";"))
}
}
if( length(measures) > 1 || ! is.na(measures)) {
for(m in measures) {
df[m] <- data.frame(lapply(df[m], gsub, pattern="[^--.0-9]",replacement= ""))
}
}
write.csv(df, paste(gsub(".csv", "", file_name), ".reformatted.csv", sep=""), row.names=FALSE, na = "")
tableName <- gsub(" +", "_", gsub("[^A-z, 0-9, ]", "", gsub(".csv", "", file_name)))
sql <- paste("CREATE TABLE", tableName, "(\n-- Change table_name to the table name you want.\n")
if( length(measures) > 1 || ! is.na(dimensions)) {
for(d in dimensions) {
sql <- paste(sql, paste(d, "varchar2(4000),\n"))
}
}
if( length(measures) > 1 || ! is.na(measures)) {
for(m in measures) {
if(m != tail(measures, n=1)) sql <- paste(sql, paste(m, "number(38,4),\n"))
else sql <- paste(sql, paste(m, "number(38,4)\n"))
}
}
sql <- paste(sql, ");")
cat(sql)
#setwd("C:/Users/jenng/OneDrive/School/Class of 2017 (UT)/CS 329E - Data Visualization/Projects/dv_tproject5_quynh/01 Data")
file_name <- "features.csv"
features_df <- read.csv(file_name, stringsAsFactors = FALSE)
names(features_df)
for(n in names(features_df)) {
features_df[n] <- data.frame(lapply(features_df[n], gsub, pattern="[^ -~]",replacement= ""))
}
str(features_df)
features_dimensions <- c("Store", "Date","IsHoliday")
features_measures <- setdiff(names(features_df), features_dimensions)
dimensions <- features_dimensions
measures <- features_measures
measures
df <- features_df
if( length(measures) > 1 || ! is.na(dimensions)) {
for(d in dimensions) {
# Get rid of " and ' in dimensions.
train_df[d] <- data.frame(lapply(df[d], gsub, pattern="[\"']",replacement= ""))
# Change & to and in dimensions.
train_df[d] <- data.frame(lapply(df[d], gsub, pattern="&",replacement= " and "))
# Change : to ; in dimensions.
df[d] <- data.frame(lapply(df[d], gsub, pattern=":",replacement= ";"))
}
}
if( length(measures) > 1 || ! is.na(measures)) {
for(m in measures) {
df[m] <- data.frame(lapply(df[m], gsub, pattern="[^--.0-9]",replacement= ""))
}
}
write.csv(df, paste(gsub(".csv", "", file_name), ".reformatted.csv", sep=""), row.names=FALSE, na = "")
tableName <- gsub(" +", "_", gsub("[^A-z, 0-9, ]", "", gsub(".csv", "", file_name)))
sql <- paste("CREATE TABLE", tableName, "(\n-- Change table_name to the table name you want.\n")
if( length(measures) > 1 || ! is.na(dimensions)) {
for(d in dimensions) {
sql <- paste(sql, paste(d, "varchar2(4000),\n"))
}
}
if( length(measures) > 1 || ! is.na(measures)) {
for(m in measures) {
if(m != tail(measures, n=1)) sql <- paste(sql, paste(m, "number(38,4),\n"))
else sql <- paste(sql, paste(m, "number(38,4)\n"))
}
}
sql <- paste(sql, ");")
cat(sql)
require("RCurl")
require("jsonlite")
require("dplyr")
# Read in data from DB
df <- data.frame(fromJSON(getURL(URLencode('oraclerest.cs.utexas.edu:5001/rest/native/?query="select walmart_train.store_id,
walmart_train.dept,
walmart_train.date_of_week,
walmart_train.isholiday,
walmart_train.weekly_sales,
walmart_stores.type_of_store,
walmart_stores.size_of_store,
walmart_features.fuel_price,
walmart_features.temperature,
walmart_features.cpi,
walmart_features.unemployment
from walmart_train, walmart_stores, walmart_features
where walmart_train.store_id = walmart_stores.store_id
and walmart_train.store_id = walmart_features.store_id
and walmart_train.date_of_week = walmart_features.date_of_week"'),httpheader=c(DB='jdbc:oracle:thin:@aevum.cs.utexas.edu:1521/f16pdb', USER='cs329e_qmn76', PASS='orcl_qmn76', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE)))
names(df)
# Display a subset and summary of the data frame
summary(df)
subset <- subset(df, Temperature < 60)
head(subset)
subset <- subset(df, STORE_ID = 5)
head(subset)
#Display column names
names(df)
# Display a subset and summary of the data frame
summary(df)
head(df)
## Get only data for store 5
subset <- subset(df, STORE_ID = 5)
head(subset)
## Get only data where Temperature is less than 60
subset <- subset(df, TEMPERATURE < 60)
head(subset)
require(tidyr)
require(dplyr)
# PERFORM ETL FOR THE TRAIN.CSV
setwd("C:/Users/jenng/OneDrive/School/Class of 2017 (UT)/CS 329E - Data Visualization/Projects/dv_tproject5_quynh/01 Data")
file_name <- "train.csv"
train_df <- read.csv(file_name, stringsAsFactors = FALSE)
names(train_df)
for(n in names(train_df)) {
train_df[n] <- data.frame(lapply(train_df[n], gsub, pattern="[^ -~]",replacement= ""))
}
str(train_df)
dimensions <- c("Store", "Dept", "Date", "IsHoliday")
measures <- setdiff(names(train_df), dimensions)
measures
df <- train_df
if( length(measures) > 1 || ! is.na(dimensions)) {
for(d in dimensions) {
# Get rid of " and ' in dimensions.
train_df[d] <- data.frame(lapply(df[d], gsub, pattern="[\"']",replacement= ""))
# Change & to and in dimensions.
train_df[d] <- data.frame(lapply(df[d], gsub, pattern="&",replacement= " and "))
# Change : to ; in dimensions.
df[d] <- data.frame(lapply(df[d], gsub, pattern=":",replacement= ";"))
}
}
if( length(measures) > 1 || ! is.na(measures)) {
for(m in measures) {
df[m] <- data.frame(lapply(df[m], gsub, pattern="[^--.0-9]",replacement= ""))
}
}
write.csv(df, paste(gsub(".csv", "", file_name), ".reformatted.csv", sep=""), row.names=FALSE, na = "")
tableName <- gsub(" +", "_", gsub("[^A-z, 0-9, ]", "", gsub(".csv", "", file_name)))
sql <- paste("CREATE TABLE", tableName, "(\n-- Change table_name to the table name you want.\n")
if( length(measures) > 1 || ! is.na(dimensions)) {
for(d in dimensions) {
sql <- paste(sql, paste(d, "varchar2(4000),\n"))
}
}
if( length(measures) > 1 || ! is.na(measures)) {
for(m in measures) {
if(m != tail(measures, n=1)) sql <- paste(sql, paste(m, "number(38,4),\n"))
else sql <- paste(sql, paste(m, "number(38,4)\n"))
}
}
sql <- paste(sql, ");")
cat(sql)
# PERFORM ETL FOR THE STORES.CSV
#setwd("C:/Users/jenng/OneDrive/School/Class of 2017 (UT)/CS 329E - Data Visualization/Projects/dv_tproject5_quynh/01 Data")
file_name <- "features.csv"
stores_df <- read.csv(file_name, stringsAsFactors = FALSE)
names(stores_df)
for(n in names(stores_df)) {
stores_df[n] <- data.frame(lapply(stores_df[n], gsub, pattern="[^ -~]",replacement= ""))
}
str(stores_df)
stores_dimensions <- c("Type", "Store")
stores_measures <- setdiff(names(stores_df), stores_dimensions)
dimensions <- stores_dimensions
measures <- stores_measures
df <- stores_df
if( length(measures) > 1 || ! is.na(dimensions)) {
for(d in dimensions) {
# Get rid of " and ' in dimensions.
train_df[d] <- data.frame(lapply(df[d], gsub, pattern="[\"']",replacement= ""))
# Change & to and in dimensions.
train_df[d] <- data.frame(lapply(df[d], gsub, pattern="&",replacement= " and "))
# Change : to ; in dimensions.
df[d] <- data.frame(lapply(df[d], gsub, pattern=":",replacement= ";"))
}
}
if( length(measures) > 1 || ! is.na(measures)) {
for(m in measures) {
df[m] <- data.frame(lapply(df[m], gsub, pattern="[^--.0-9]",replacement= ""))
}
}
write.csv(df, paste(gsub(".csv", "", file_name), ".reformatted.csv", sep=""), row.names=FALSE, na = "")
tableName <- gsub(" +", "_", gsub("[^A-z, 0-9, ]", "", gsub(".csv", "", file_name)))
sql <- paste("CREATE TABLE", tableName, "(\n-- Change table_name to the table name you want.\n")
if( length(measures) > 1 || ! is.na(dimensions)) {
for(d in dimensions) {
sql <- paste(sql, paste(d, "varchar2(4000),\n"))
}
}
if( length(measures) > 1 || ! is.na(measures)) {
for(m in measures) {
if(m != tail(measures, n=1)) sql <- paste(sql, paste(m, "number(38,4),\n"))
else sql <- paste(sql, paste(m, "number(38,4)\n"))
}
}
sql <- paste(sql, ");")
cat(sql)
# PERFORM ETL FOR THE FEATURES.CSV
#setwd("C:/Users/jenng/OneDrive/School/Class of 2017 (UT)/CS 329E - Data Visualization/Projects/dv_tproject5_quynh/01 Data")
file_name <- "features.csv"
features_df <- read.csv(file_name, stringsAsFactors = FALSE)
names(features_df)
for(n in names(features_df)) {
features_df[n] <- data.frame(lapply(features_df[n], gsub, pattern="[^ -~]",replacement= ""))
}
str(features_df)
features_dimensions <- c("Store", "Date","IsHoliday")
features_measures <- setdiff(names(features_df), features_dimensions)
dimensions <- features_dimensions
measures <- features_measures
measures
df <- features_df
if( length(measures) > 1 || ! is.na(dimensions)) {
for(d in dimensions) {
# Get rid of " and ' in dimensions.
train_df[d] <- data.frame(lapply(df[d], gsub, pattern="[\"']",replacement= ""))
# Change & to and in dimensions.
train_df[d] <- data.frame(lapply(df[d], gsub, pattern="&",replacement= " and "))
# Change : to ; in dimensions.
df[d] <- data.frame(lapply(df[d], gsub, pattern=":",replacement= ";"))
}
}
if( length(measures) > 1 || ! is.na(measures)) {
for(m in measures) {
df[m] <- data.frame(lapply(df[m], gsub, pattern="[^--.0-9]",replacement= ""))
}
}
write.csv(df, paste(gsub(".csv", "", file_name), ".reformatted.csv", sep=""), row.names=FALSE, na = "")
tableName <- gsub(" +", "_", gsub("[^A-z, 0-9, ]", "", gsub(".csv", "", file_name)))
sql <- paste("CREATE TABLE", tableName, "(\n-- Change table_name to the table name you want.\n")
if( length(measures) > 1 || ! is.na(dimensions)) {
for(d in dimensions) {
sql <- paste(sql, paste(d, "varchar2(4000),\n"))
}
}
if( length(measures) > 1 || ! is.na(measures)) {
for(m in measures) {
if(m != tail(measures, n=1)) sql <- paste(sql, paste(m, "number(38,4),\n"))
else sql <- paste(sql, paste(m, "number(38,4)\n"))
}
}
sql <- paste(sql, ");")
cat(sql)
require("RCurl")
require("jsonlite")
require("dplyr")
# Read in data from DB
df <- data.frame(fromJSON(getURL(URLencode('oraclerest.cs.utexas.edu:5001/rest/native/?query="select walmart_train.store_id,
walmart_train.dept,
walmart_train.date_of_week,
walmart_train.isholiday,
walmart_train.weekly_sales,
walmart_stores.type_of_store,
walmart_stores.size_of_store,
walmart_features.fuel_price,
walmart_features.temperature,
walmart_features.cpi,
walmart_features.unemployment
from walmart_train, walmart_stores, walmart_features
where walmart_train.store_id = walmart_stores.store_id
and walmart_train.store_id = walmart_features.store_id
and walmart_train.date_of_week = walmart_features.date_of_week"'),httpheader=c(DB='jdbc:oracle:thin:@aevum.cs.utexas.edu:1521/f16pdb', USER='cs329e_qmn76', PASS='orcl_qmn76', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE)))
#Display column names
names(df)
# Display a subset and summary of the data frame
summary(df)
head(df)
## Get only data for store 5
subset <- subset(df, STORE_ID = 5)
head(subset)
## Get only data where Temperature is less than 60
subset <- subset(df, TEMPERATURE < 60)
head(subset)
```{r}
source("../01 Data/Data.R", echo = TRUE)
```
require("RCurl")
require("jsonlite")
require("dplyr")
# Read in data from DB
df <- data.frame(fromJSON(getURL(URLencode('oraclerest.cs.utexas.edu:5001/rest/native/?query="select walmart_train.store_id,
walmart_train.dept,
walmart_train.date_of_week,
walmart_train.isholiday,
walmart_train.weekly_sales,
walmart_stores.type_of_store,
walmart_stores.size_of_store,
walmart_features.fuel_price,
walmart_features.temperature,
walmart_features.cpi,
walmart_features.unemployment
from walmart_train, walmart_stores, walmart_features
where walmart_train.store_id = walmart_stores.store_id
and walmart_train.store_id = walmart_features.store_id
and walmart_train.date_of_week = walmart_features.date_of_week"'),httpheader=c(DB='jdbc:oracle:thin:@aevum.cs.utexas.edu:1521/f16pdb', USER='cs329e_qmn76', PASS='orcl_qmn76', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE)))
#Display column names
names(df)
# Display a subset and summary of the data frame
summary(df)
head(df)
## Get only data for store 5
subset <- subset(df, STORE_ID = 5)
head(subset)
## Get only data where Temperature is less than 60
subset <- subset(df, TEMPERATURE < 60)
head(subset)
